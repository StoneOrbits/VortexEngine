name: Deploy Jekyll with GitHub Pages and Doxygen Docs

on:
  # Runs on pushes to the default branch and allows manual runs
  push:
    branches:
      - gh-pages
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Jekyll Site
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for all branches

      - name: Setup Ruby for Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Ensure compatibility with Jekyll

      - name: Build Jekyll Site
        run: |
          bundle install
          bundle exec jekyll build -d _site

      - name: Upload Jekyll Site
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Generate Doxygen Documentation
  docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Doxygen and Dependencies
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz texlive

      - name: Generate Doxygen Docs for Branches
        run: |
          branches=("master:core" "duo" "handle" "orbit" "gloves" "desktop" "spark" "chromadeck")
          rm -rf docs || true

          for item in "${branches[@]}"; do
            IFS=':' read -r branch dest <<< "$item"
            dest="${dest:-$branch}"

            # Checkout branch and generate documentation
            git checkout $branch
            doxygen Doxyfile

            # Move generated files to the appropriate directory
            mkdir -p docs/$dest
            mv -v docs/* docs/$dest/
            rm -rf docs/*

            echo "Generated docs for $branch, deployed to docs/$dest"
          done

      - name: Upload Doxygen Docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deploy to GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: [build, docs]
    steps:
      - name: Download Artifacts
        uses: actions/download-pages-artifact@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

