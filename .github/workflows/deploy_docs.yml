name: Build and Deploy Jekyll and Doxygen Documentation

on:
  push:
    branches:
      - gh-pages
  workflow_dispatch: # Allows manual trigger from the Actions tab

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Install Doxygen and Dependencies
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      - name: Generate Doxygen Documentation
        run: |
          # Define the branches and their corresponding doc folders
          branches=("master:core" "duo" "handle" "orbit" "gloves" "desktop" "spark" "chromadeck")
          mkdir -p _site/docs # Ensure the docs directory exists

          # Iterate over each branch and generate documentation
          for item in "${branches[@]}"; do
            IFS=':' read -r branch dest <<< "$item"
            dest="${dest:-$branch}"

            # Check if the branch exists on the remote
            if git ls-remote --heads origin $branch | grep -q $branch; then
              echo "Processing branch: $branch"
              # Use a temporary directory for each branch to avoid conflicts
              mkdir -p temp/$branch
              git worktree add temp/$branch origin/$branch

              # Change directory to the worktree
              cd temp/$branch

              # Ensure the output directory exists in the _site/docs folder
              mkdir -p ../../_site/docs/$dest

              # Adjust the Doxyfile to set the output directory
              echo "Adjusting Doxyfile for branch: $branch"
              sed -i "s|OUTPUT_DIRECTORY *=.*|OUTPUT_DIRECTORY = ../../_site/docs/$dest|" Doxyfile

              # Run Doxygen to generate the documentation
              echo "Running Doxygen for branch: $branch"
              doxygen Doxyfile || { echo "Doxygen failed for branch: $branch"; exit 1; }

              # Return to the root directory
              cd ../..

              # Clean up the worktree
              git worktree remove temp/$branch -f
            else
              echo "Branch $branch does not exist on the remote."
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
