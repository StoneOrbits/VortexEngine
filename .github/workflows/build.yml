name: Handle Build

on:
  push:
    branches: [ "handle" ]
  pull_request:
    branches: [ "handle" ]
  workflow_dispatch: # manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout outer repository
      uses: actions/checkout@v3
      with:
        repository: "StoneOrbits/VortexEmulator"
        path: VortexEmulator
    - name: Checkout current repository inside the outer repository
      uses: actions/checkout@v3
      with:
        path: VortexEmulator/VortexTestingFramework/VortexEngine
    - name: Install Dependencies
      run: sudo apt-get install valgrind g++ make
    - name: Build
      run: make -j
      working-directory: VortexEmulator/VortexTestingFramework
    - name: Set execute permissions for test script
      run: chmod +x ./runtests.sh
      working-directory:  VortexEmulator/VortexTestingFramework/tests
    - name: Run tests
      run: ./runtests.sh --handle
      working-directory:  VortexEmulator/VortexTestingFramework/tests

  embedded:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install Dependencies
        run: make install
      - name: Build Binary
        run: make build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: embedded firmware
          path: |
            build/VortexEngine.ino.bin
            build/VortexEngine.ino.elf
            build/VortexEngine.ino.map
            build/VortexEngine.ino.hex
            build/VortexEngine.ino.uf2

  docs:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/handle'
    steps:
    - name: Checkout current repository inside the outer repository
      uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo apt-get install doxygen graphviz texlive
    - name: Checkout doxygen-awesome
      run: git clone https://github.com/jothepro/doxygen-awesome-css.git doxygen-awesome-css
    - name: Generate Documentation
      run: doxygen Doxyfile
    - name: Commit and Push Documentation
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs
        git commit -m "Update Doxygen documentation"
        git push -f origin HEAD:handle-docs
